!function(t){var e='<div id="spaced-projectlet" class="<%- d.className %>" style="position: fixed; top: 0; left: 0; background: rgba(255, 255, 255, 0.8); z-index: 10000000"><div class="spaced-projectlet-title">Tag this project with a tweeter.</div><form><input type="text" value="<%- d.handle %>" placeholder="@twitterhandle" /></form><div class="spaced-projectlet-handles"><% _.each(d.handles, function (handle) { %><a class="spaced-projectlet-handle" href="twitter.com/<%- handle %>">@<%- handle %></a><% }); %></div><a class="spaced-projectlet-close">close</a></div>',a=Backbone.View.extend({template:_.template(e,{variable:"d"}),state:{handles:[]},events:{"submit form":function(t){t.preventDefault();var e=this.$("input").val();this.setState({handles:_.union(this.state.handles,[e])}).render(),n.post("/people",{projectId:this.state.id,handle:e})},"click .spaced-projectlet-close":function(){var t=this;this.$el.fadeOut(200,function(){t.remove()})}},initialize:function(t){t=_.extend({},t),this.state=_.extend(this.state,t.state)},render:function(){return this.$el.html(this.template(this.state)),this},setState:function(t){return _.extend(this.state,t),this},setData:function(t){return t.handles=_.pluck(t.people,"handle"),this.setState(t).render(),this}}),n={request:function(t){return t=_.extend({contentType:"application/json",dataType:"json"},t),t.data&&(t.data=JSON.stringify(t.data)),$.ajax(t)}};_.each(["get","post","put","delete"],function(t){n[t]=function(e,a,n){return this.request(_.extend({method:t,url:"http://projectlet.herokuapp.com"+e,data:a},n))}});var s=(new a).render();s.$el.prependTo(t.body),n.post("/projects",{uri:location.toString()}).then(function(t){s.setData(t)})}(document);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RsZXQuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJ0ZW1wbGF0ZSIsIlByb2plY3RsZXQiLCJCYWNrYm9uZSIsIlZpZXciLCJleHRlbmQiLCJfIiwidmFyaWFibGUiLCJzdGF0ZSIsImhhbmRsZXMiLCJldmVudHMiLCJzdWJtaXQgZm9ybSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJoYW5kbGUiLCJ0aGlzIiwiJCIsInZhbCIsInNldFN0YXRlIiwidW5pb24iLCJyZW5kZXIiLCJhamF4IiwicG9zdCIsInByb2plY3RJZCIsImlkIiwiY2xpY2sgLnNwYWNlZC1wcm9qZWN0bGV0LWNsb3NlIiwic2VsZiIsIiRlbCIsImZhZGVPdXQiLCJyZW1vdmUiLCJpbml0aWFsaXplIiwib3B0aW9ucyIsImh0bWwiLCJhdHRycyIsInNldERhdGEiLCJkYXRhIiwicGx1Y2siLCJwZW9wbGUiLCJyZXF1ZXN0IiwiY29udGVudFR5cGUiLCJkYXRhVHlwZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlYWNoIiwibWV0aG9kIiwicGF0aCIsInVybCIsInByb2plY3RsZXQiLCJwcmVwZW5kVG8iLCJib2R5IiwidXJpIiwibG9jYXRpb24iLCJ0b1N0cmluZyIsInRoZW4iLCJyZXN1bHQiXSwibWFwcGluZ3MiOiJDQUFBLFNBQVdBLEdBRVgsR0FBSUMsR0FDRix3aUJBYUVDLEVBQWFDLFNBQVNDLEtBQUtDLFFBQzdCSixTQUFVSyxFQUFFTCxTQUFTQSxHQUFXTSxTQUFVLE1BRTFDQyxPQUNFQyxZQUdGQyxRQUNFQyxjQUFlLFNBQVVDLEdBQ3ZCQSxFQUFNQyxnQkFDTixJQUFJQyxHQUFTQyxLQUFLQyxFQUFFLFNBQVNDLEtBQzdCRixNQUFLRyxVQUNIVCxRQUFTSCxFQUFFYSxNQUFNSixLQUFLUCxNQUFNQyxTQUFVSyxNQUNyQ00sU0FDSEMsRUFBS0MsS0FBSyxXQUFZQyxVQUFXUixLQUFLUCxNQUFNZ0IsR0FBSVYsT0FBUUEsS0FFMURXLGlDQUFrQyxXQUNoQyxHQUFJQyxHQUFPWCxJQUNYQSxNQUFLWSxJQUFJQyxRQUFRLElBQUssV0FDcEJGLEVBQUtHLGFBS1hDLFdBQVksU0FBVUMsR0FDcEJBLEVBQVV6QixFQUFFRCxVQUFXMEIsR0FDdkJoQixLQUFLUCxNQUFRRixFQUFFRCxPQUFPVSxLQUFLUCxNQUFPdUIsRUFBUXZCLFFBRzVDWSxPQUFRLFdBRU4sTUFEQUwsTUFBS1ksSUFBSUssS0FBS2pCLEtBQUtkLFNBQVNjLEtBQUtQLFFBQzFCTyxNQUdURyxTQUFVLFNBQVVlLEdBRWxCLE1BREEzQixHQUFFRCxPQUFPVSxLQUFLUCxNQUFPeUIsR0FDZGxCLE1BR1RtQixRQUFTLFNBQVVDLEdBR2pCLE1BRkFBLEdBQUsxQixRQUFVSCxFQUFFOEIsTUFBTUQsRUFBS0UsT0FBUSxVQUNwQ3RCLEtBQUtHLFNBQVNpQixHQUFNZixTQUNiTCxRQUtQTSxHQUNGaUIsUUFBUyxTQUFVUCxHQVFqQixNQVBBQSxHQUFVekIsRUFBRUQsUUFDVmtDLFlBQWEsbUJBQ2JDLFNBQVUsUUFDVFQsR0FDQ0EsRUFBUUksT0FDVkosRUFBUUksS0FBT00sS0FBS0MsVUFBVVgsRUFBUUksT0FFakNuQixFQUFFSyxLQUFLVSxJQUdsQnpCLEdBQUVxQyxNQUFNLE1BQU8sT0FBUSxNQUFPLFVBQVcsU0FBVUMsR0FDakR2QixFQUFLdUIsR0FBVSxTQUFVQyxFQUFNVixFQUFNSixHQUNuQyxNQUFPaEIsTUFBS3VCLFFBQVFoQyxFQUFFRCxRQUNwQnVDLE9BQVFBLEVBQ1JFLElBQUssa0NBQW9DRCxFQUN6Q1YsS0FBTUEsR0FDTEosTUFJUCxJQUFJZ0IsSUFBYSxHQUFJN0MsSUFBYWtCLFFBQ2xDMkIsR0FBV3BCLElBQUlxQixVQUFVaEQsRUFBU2lELE1BRWxDNUIsRUFBS0MsS0FBSyxhQUNSNEIsSUFBS0MsU0FBU0MsYUFDYkMsS0FBSyxTQUFVQyxHQUNoQlAsRUFBV2IsUUFBUW9CLE1BSWxCdEQiLCJmaWxlIjoicHJvamVjdGxldC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKGRvY3VtZW50KSB7XG5cbnZhciB0ZW1wbGF0ZSA9XG4gICc8ZGl2IGlkPVwic3BhY2VkLXByb2plY3RsZXRcIiBjbGFzcz1cIjwlLSBkLmNsYXNzTmFtZSAlPlwiIHN0eWxlPVwicG9zaXRpb246IGZpeGVkOyB0b3A6IDA7IGxlZnQ6IDA7IGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsgei1pbmRleDogMTAwMDAwMDBcIj4nICtcbiAgICAnPGRpdiBjbGFzcz1cInNwYWNlZC1wcm9qZWN0bGV0LXRpdGxlXCI+VGFnIHRoaXMgcHJvamVjdCB3aXRoIGEgdHdlZXRlci48L2Rpdj4nICtcbiAgICAnPGZvcm0+JyArXG4gICAgICAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9XCI8JS0gZC5oYW5kbGUgJT5cIiBwbGFjZWhvbGRlcj1cIkB0d2l0dGVyaGFuZGxlXCIgLz4nICtcbiAgICAnPC9mb3JtPicgK1xuICAgICc8ZGl2IGNsYXNzPVwic3BhY2VkLXByb2plY3RsZXQtaGFuZGxlc1wiPicgK1xuICAgICAgJzwlIF8uZWFjaChkLmhhbmRsZXMsIGZ1bmN0aW9uIChoYW5kbGUpIHsgJT4nICtcbiAgICAgICAgJzxhIGNsYXNzPVwic3BhY2VkLXByb2plY3RsZXQtaGFuZGxlXCIgaHJlZj1cInR3aXR0ZXIuY29tLzwlLSBoYW5kbGUgJT5cIj5APCUtIGhhbmRsZSAlPjwvYT4nICtcbiAgICAgICc8JSB9KTsgJT4nICtcbiAgICAnPC9kaXY+JyArXG4gICAgJzxhIGNsYXNzPVwic3BhY2VkLXByb2plY3RsZXQtY2xvc2VcIj5jbG9zZTwvYT4nICtcbiAgJzwvZGl2Pic7XG5cbnZhciBQcm9qZWN0bGV0ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuICB0ZW1wbGF0ZTogXy50ZW1wbGF0ZSh0ZW1wbGF0ZSwge3ZhcmlhYmxlOiAnZCd9KSxcblxuICBzdGF0ZToge1xuICAgIGhhbmRsZXM6IFtdLFxuICB9LFxuXG4gIGV2ZW50czoge1xuICAgICdzdWJtaXQgZm9ybSc6IGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHZhciBoYW5kbGUgPSB0aGlzLiQoJ2lucHV0JykudmFsKCk7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaGFuZGxlczogXy51bmlvbih0aGlzLnN0YXRlLmhhbmRsZXMsIFtoYW5kbGVdKVxuICAgICAgfSkucmVuZGVyKCk7XG4gICAgICBhamF4LnBvc3QoJy9wZW9wbGUnLCB7cHJvamVjdElkOiB0aGlzLnN0YXRlLmlkLCBoYW5kbGU6IGhhbmRsZX0pO1xuICAgIH0sXG4gICAgJ2NsaWNrIC5zcGFjZWQtcHJvamVjdGxldC1jbG9zZSc6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIHRoaXMuJGVsLmZhZGVPdXQoMjAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNlbGYucmVtb3ZlKCk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9LFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IF8uZXh0ZW5kKHt9LCBvcHRpb25zKTtcbiAgICB0aGlzLnN0YXRlID0gXy5leHRlbmQodGhpcy5zdGF0ZSwgb3B0aW9ucy5zdGF0ZSk7XG4gIH0sXG5cbiAgcmVuZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy4kZWwuaHRtbCh0aGlzLnRlbXBsYXRlKHRoaXMuc3RhdGUpKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcblxuICBzZXRTdGF0ZTogZnVuY3Rpb24gKGF0dHJzKSB7XG4gICAgXy5leHRlbmQodGhpcy5zdGF0ZSwgYXR0cnMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIHNldERhdGE6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGF0YS5oYW5kbGVzID0gXy5wbHVjayhkYXRhLnBlb3BsZSwgJ2hhbmRsZScpO1xuICAgIHRoaXMuc2V0U3RhdGUoZGF0YSkucmVuZGVyKCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG59KTtcblxuXG52YXIgYWpheCA9IHtcbiAgcmVxdWVzdDogZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gXy5leHRlbmQoe1xuICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgfSwgb3B0aW9ucyk7XG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgb3B0aW9ucy5kYXRhID0gSlNPTi5zdHJpbmdpZnkob3B0aW9ucy5kYXRhKTtcbiAgICB9XG4gICAgcmV0dXJuICQuYWpheChvcHRpb25zKTtcbiAgfSxcbn07XG5fLmVhY2goWydnZXQnLCAncG9zdCcsICdwdXQnLCAnZGVsZXRlJ10sIGZ1bmN0aW9uIChtZXRob2QpIHtcbiAgYWpheFttZXRob2RdID0gZnVuY3Rpb24gKHBhdGgsIGRhdGEsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KF8uZXh0ZW5kKHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiAnaHR0cDovL3Byb2plY3RsZXQuaGVyb2t1YXBwLmNvbScgKyBwYXRoLFxuICAgICAgZGF0YTogZGF0YSxcbiAgICB9LCBvcHRpb25zKSk7XG4gIH07XG59KTtcblxudmFyIHByb2plY3RsZXQgPSBuZXcgUHJvamVjdGxldCgpLnJlbmRlcigpO1xucHJvamVjdGxldC4kZWwucHJlcGVuZFRvKGRvY3VtZW50LmJvZHkpO1xuXG5hamF4LnBvc3QoJy9wcm9qZWN0cycsIHtcbiAgdXJpOiBsb2NhdGlvbi50b1N0cmluZygpXG59KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgcHJvamVjdGxldC5zZXREYXRhKHJlc3VsdCk7XG59KTtcblxuXG59KShkb2N1bWVudCk7XG5cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==